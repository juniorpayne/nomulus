// Copyright 2020 The Nomulus Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

dependencies {
  def deps = rootProject.dependencyMap

  implementation deps['com.beust:jcommander']
  implementation deps['com.google.appengine:appengine-api-1.0-sdk']
  implementation deps['com.google.code.findbugs:jsr305']
  implementation deps['com.google.flogger:flogger']
  implementation deps['com.google.guava:guava']
  implementation deps['com.google.re2j:re2j']
  implementation project(':core')
  implementation project(':util')

  testImplementation deps['com.google.truth:truth']
  testImplementation deps['com.thoughtworks.qdox:qdox']
  testImplementation deps['junit:junit']
  testImplementation deps['org.junit.jupiter:junit-jupiter-api']
  testImplementation deps['org.junit.jupiter:junit-jupiter-engine']
  testImplementation deps['org.junit.platform:junit-platform-runner']
  testImplementation deps['org.junit.platform:junit-platform-suite-api']
  testImplementation deps['org.testcontainers:junit-jupiter']
}

test {
  useJUnitPlatform()
}

task flowDocsTool(type: JavaExec) {
  systemProperty 'test.projectRoot', rootProject.projectRootDir
  jvmArgs = ['--add-exports', 'jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED']
  classpath = sourceSets.main.runtimeClasspath
  main = 'google.registry.documentation.FlowDocumentationTool'

  def arguments = []
  if (rootProject.flowDocsFile) {
    arguments << "--output_file=${rootProject.flowDocsFile}"
  } else {
    arguments << "--output_file=${rootProject.projectRootDir}/docs/flows.md"
  }
  args arguments
}

tasks.compileJava {
  options.compilerArgs = ["--add-exports",
                          "jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
                          "--add-exports",
                          "jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
                          "--add-exports",
                          "jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED"]

}

tasks.test {
  jvmArgs = ['--add-exports',
             'jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED']
}
