[2025-06-03 08:42:25] Starting Terraform 6.37.0 Compatibility Test Suite
[2025-06-03 08:42:25] Test Results Directory: /home/junior/newdoc/nomulus/proxy/terraform/test-results
[2025-06-03 08:42:25] Log File: /home/junior/newdoc/nomulus/proxy/terraform/test-results/test_run_20250603_084225.log
[0;34mℹ️  Running test: Terraform Version Check[0m
[0;34mℹ️  Checking Terraform version compatibility...[0m
[0;34mℹ️  Checking Terraform version compatibility...[0m
[0;32m✅ Terraform version 1.12.1 meets minimum requirement (1.0)[0m
[0;32m✅ Terraform version 1.12.1 meets minimum requirement (1.0)[0m
[0;32m✅ Terraform Version Check - PASSED[0m
[0;34mℹ️  Running test: Provider Version Validation[0m
[0;34mℹ️  Validating provider version constraints...[0m
[0;34mℹ️  Validating provider version constraints...[0m
[0;32m✅ Provider version constraint found in example_config.tf[0m
[0;32m✅ Provider version constraint found in example_config.tf[0m
[0;32m✅ Provider version constraint found in modules/main.tf[0m
[0;32m✅ Provider version constraint found in modules/main.tf[0m
[0;32m✅ Provider Version Validation - PASSED[0m
[0;34mℹ️  Running test: Terraform Syntax Validation[0m
[0;34mℹ️  Validating Terraform syntax...[0m
[0;34mℹ️  Validating Terraform syntax...[0m
[0;32m✅ Terraform formatting is correct[0m
[0;32m✅ Terraform formatting is correct[0m
[32m[1mSuccess![0m The configuration is valid.
[0m
[0;32m✅ Terraform syntax validation passed[0m
[0;32m✅ Terraform syntax validation passed[0m
[0;32m✅ Terraform Syntax Validation - PASSED[0m
[0;34mℹ️  Running test: Security Best Practices[0m
[0;34mℹ️  Validating security best practices...[0m
[0;34mℹ️  Validating security best practices...[0m
[0;32m✅ GCS uniform bucket-level access enabled[0m
[0;32m✅ GCS uniform bucket-level access enabled[0m
[0;32m✅ GCS public access prevention enforced[0m
[0;32m✅ GCS public access prevention enforced[0m
[0;32m✅ Workload Identity configured[0m
[0;32m✅ Workload Identity configured[0m
[0;32m✅ Shielded nodes enabled[0m
[0;32m✅ Shielded nodes enabled[0m
[0;32m✅ Binary authorization configured[0m
[0;32m✅ Binary authorization configured[0m
[0;32m✅ Network policies enabled[0m
[0;32m✅ Network policies enabled[0m
[0;32m✅ KMS key rotation configured[0m
[0;32m✅ KMS key rotation configured[0m
[0;32m✅ Lifecycle protection enabled[0m
[0;32m✅ Lifecycle protection enabled[0m
[0;32m✅ Security Best Practices - PASSED[0m
[0;34mℹ️  Running test: Naming Conventions[0m
[0;34mℹ️  Validating resource naming conventions...[0m
[0;34mℹ️  Validating resource naming conventions...[0m
[0;32m✅ Resource naming conventions validated[0m
[0;32m✅ Resource naming conventions validated[0m
[0;32m✅ Naming Conventions - PASSED[0m
[0;34mℹ️  Running test: Module Dependencies[0m
[0;34mℹ️  Validating module dependencies and outputs...[0m
[0;34mℹ️  Validating module dependencies and outputs...[0m
[0;32m✅ GKE module outputs exist[0m
[0;32m✅ GKE module outputs exist[0m
[0;32m✅ Networking module outputs exist[0m
[0;32m✅ Networking module outputs exist[0m
[0;32m✅ Main module outputs exist[0m
[0;32m✅ Main module outputs exist[0m
[0;32m✅ Module Dependencies - PASSED[0m
[0;34mℹ️  Running test: Variable Validation[0m
[0;34mℹ️  Validating variable definitions and types...[0m
[0;34mℹ️  Validating variable definitions and types...[0m
[0;32m✅ Required variable gcp_project_id defined[0m
[0;32m✅ Required variable gcp_project_id defined[0m
[0;32m✅ Required variable environment defined[0m
[0;32m✅ Required variable environment defined[0m
[0;32m✅ Required variable proxy_service_account_email defined[0m
[0;32m✅ Required variable proxy_service_account_email defined[0m
[0;32m✅ Required variable proxy_cluster_region defined[0m
[0;32m✅ Required variable proxy_cluster_region defined[0m
[0;32m✅ Modern map type constraints found[0m
[0;32m✅ Modern map type constraints found[0m
[0;32m✅ Variable Validation - PASSED[0m
[0;34mℹ️  Running test: Documentation Validation[0m
[0;34mℹ️  Validating documentation completeness...[0m
[0;34mℹ️  Validating documentation completeness...[0m
[0;32m✅ Documentation file docs/PROVIDER_COMPATIBILITY_ANALYSIS.md exists[0m
[0;32m✅ Documentation file docs/PROVIDER_COMPATIBILITY_ANALYSIS.md exists[0m
[0;32m✅ Documentation file docs/EMERGENCY_RECOVERY_GUIDE.md exists[0m
[0;32m✅ Documentation file docs/EMERGENCY_RECOVERY_GUIDE.md exists[0m
[0;32m✅ Documentation file docs/STATE_BACKUP_PROCEDURES.md exists[0m
[0;32m✅ Documentation file docs/STATE_BACKUP_PROCEDURES.md exists[0m
[0;32m✅ Documentation Validation - PASSED[0m
[0;34mℹ️  Running test: Backup System Validation[0m
[0;34mℹ️  Validating backup and recovery system...[0m
[0;34mℹ️  Validating backup and recovery system...[0m
[0;32m✅ Backup component scripts/backup_terraform_state.sh exists and is executable[0m
[0;32m✅ Backup component scripts/backup_terraform_state.sh exists and is executable[0m
[0;32m✅ Backup component scripts/restore_terraform_state.sh exists and is executable[0m
[0;32m✅ Backup component scripts/restore_terraform_state.sh exists and is executable[0m
[0;32m✅ Backup component scripts/validate_state_backup.sh exists and is executable[0m
[0;32m✅ Backup component scripts/validate_state_backup.sh exists and is executable[0m
[0;32m✅ Backup System Validation - PASSED[0m
[0;34mℹ️  Running test: Terraform Plan Test[0m
[0;34mℹ️  Testing Terraform plan generation...[0m
[0;34mℹ️  Testing Terraform plan generation...[0m
[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/google versions matching "~> 6.37.0"...
- Finding latest version of hashicorp/random...
- Installing hashicorp/random v3.7.2...
- Installed hashicorp/random v3.7.2 (signed by HashiCorp)
- Installing hashicorp/google v6.37.0...
- Installed hashicorp/google v6.37.0 (signed by HashiCorp)
Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[32m[1mSuccess![0m The configuration is valid.
[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # google_storage_bucket.test[0m will be created
[0m  [32m+[0m[0m resource "google_storage_bucket" "test" {
      [32m+[0m[0m effective_labels            = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m location                    = "US"
      [32m+[0m[0m name                        = (known after apply)
      [32m+[0m[0m project                     = (known after apply)
      [32m+[0m[0m project_number              = (known after apply)
      [32m+[0m[0m public_access_prevention    = "enforced"
      [32m+[0m[0m rpo                         = (known after apply)
      [32m+[0m[0m self_link                   = (known after apply)
      [32m+[0m[0m storage_class               = "STANDARD"
      [32m+[0m[0m terraform_labels            = {
          [32m+[0m[0m "goog-terraform-provisioned" = "true"
        }
      [32m+[0m[0m time_created                = (known after apply)
      [32m+[0m[0m uniform_bucket_level_access = true
      [32m+[0m[0m updated                     = (known after apply)
      [32m+[0m[0m url                         = (known after apply)

      [32m+[0m[0m soft_delete_policy (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # random_id.bucket_suffix[0m will be created
[0m  [32m+[0m[0m resource "random_id" "bucket_suffix" {
      [32m+[0m[0m b64_std     = (known after apply)
      [32m+[0m[0m b64_url     = (known after apply)
      [32m+[0m[0m byte_length = 8
      [32m+[0m[0m dec         = (known after apply)
      [32m+[0m[0m hex         = (known after apply)
      [32m+[0m[0m id          = (known after apply)
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: test.tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "test.tfplan"
[0;32m✅ Terraform plan test passed[0m
[0;32m✅ Terraform plan test passed[0m
[0;32m✅ Terraform Plan Test - PASSED[0m
[2025-06-03 08:42:45] 
[2025-06-03 08:42:45] ===============================================
[2025-06-03 08:42:45] TEST SUITE SUMMARY
[2025-06-03 08:42:45] ===============================================
[2025-06-03 08:42:45] Total Tests: 10
[2025-06-03 08:42:45] Passed: 10
[2025-06-03 08:42:46] Failed: 0
[0;32m✅ 🎉 ALL TESTS PASSED! Infrastructure is ready for Terraform 6.37.0[0m
[2025-06-03 08:42:46] Infrastructure validation successful - ready for production deployment
[2025-06-03 08:42:46] Cleaning up test artifacts...
